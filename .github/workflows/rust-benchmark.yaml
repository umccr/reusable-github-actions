on:
  workflow_call:
    inputs:
      rust-version:
        type: string
        required: false
        default: nightly

jobs:
  benchmark:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ inputs.rust-version }}
          override: true
          components: rustfmt, clippy
      - name: Install cargo-criterion
        uses: baptiste0928/cargo-install@v1
        with:
          crate: cargo-criterion
      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-cache3-${{ hashFiles('**/Cargo.toml') }}
          restore-keys: ${{ runner.os }}-cargo-cache3-
      # JSON on stdout, bencher (human readable) results on stderr
      - name: Timestamp
        run: export BENCH_TIMESTAMP=$(date +'%Y-%m-%d-%s')
      - name: Run requests benchmarks
        #run: cargo criterion --bench request-benchmarks --message-format=json -- LIGHT 1> requests-benchmarks-${BENCH_TIMESTAMP}.json
        run: cargo criterion --bench request-benchmarks --message-format=json -- LIGHT 1> requests-benchmarks.json
      - name: Run search benchmarks
        #run: cargo criterion --bench search-benchmarks --message-format=json -- LIGHT 1> search-benchmarks-${BENCH_TIMESTAMP}.json
        run: cargo criterion --bench search-benchmarks --message-format=json -- LIGHT 1> search-benchmarks.json
      - name: Download previous benchmark data
        uses: actions/cache@v3
        with:
          path: ./cache
          key: ${{ runner.os }}-benchmark
      - name: Store requests benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        with:
          tool: 'cargo'
          # Where the output from the benchmark tool is stored
          #output-file-path: requests-benchmarks-${BENCH_TIMESTAMP}.json
          output-file-path: ${{ github.repository }}/requests-benchmarks.json
          # Where the previous data file is stored
          #external-data-json-path: ./cache/requests-benchmarks-${BENCH_TIMESTAMP}.json
          external-data-json-path: ./cache/requests-benchmarks.json
          fail-on-alert: false
      - name: Store search benchmark result
        uses: benchmark-action/github-action-benchmark@v1
        with:
          tool: 'cargo'
          output-file-path: ${{ github.repository }}/search-benchmarks.json
          #output-file-path: search-benchmarks-${BENCH_TIMESTAMP}.json
          external-data-json-path: ./cache/search-benchmarks.json
          #external-data-json-path: ./cache/search-benchmarks-${BENCH_TIMESTAMP}.json
          fail-on-alert: false


